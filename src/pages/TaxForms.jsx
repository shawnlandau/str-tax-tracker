import React, { useState, useEffect } from 'react'
import { apiService } from '../services/api'
import { 
  DocumentTextIcon, 
  PlusIcon,
  ExclamationTriangleIcon,
  ArrowDownTrayIcon
} from '@heroicons/react/24/outline'

const TaxForms = () => {
  const [taxFormsData, setTaxFormsData] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)

  useEffect(() => {
    const fetchTaxFormsData = async () => {
      try {
        setLoading(true)
        const data = await apiService.getTaxFormsData(2024)
        setTaxFormsData(data)
      } catch (err) {
        setError('Failed to load tax forms data')
        console.error('TaxForms error:', err)
      } finally {
        setLoading(false)
      }
    }

    fetchTaxFormsData()
  }, [])

  const formatCurrency = (amount) => {
    return new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    }).format(amount)
  }

  const downloadForm = (formName) => {
    // Create a simple text file with form information
    const formContent = `Tax Form: ${formName}
    
This is a template for ${formName}. 
Please consult with a tax professional for accurate completion.

Generated by STR Tax Tracker
Date: ${new Date().toLocaleDateString()}`

    const blob = new Blob([formContent], { type: 'text/plain' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `${formName.replace(/\s+/g, '_')}.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <ExclamationTriangleIcon className="h-12 w-12 text-red-500 mx-auto mb-4" />
          <h2 className="text-xl font-semibold text-gray-900 mb-2">Error Loading Tax Forms</h2>
          <p className="text-gray-600">{error}</p>
        </div>
      </div>
    )
  }

  const allTaxForms = [
    {
      name: "Form 4562 - Depreciation and Amortization",
      description: "Used to claim depreciation and amortization deductions",
      category: "Depreciation"
    },
    {
      name: "Schedule E - Supplemental Income and Loss",
      description: "Reports rental income and expenses from real estate",
      category: "Income"
    },
    {
      name: "Form 4797 - Sales of Business Property",
      description: "Reports gains and losses from the sale of business property",
      category: "Sales"
    },
    {
      name: "Form 8829 - Expenses for Business Use of Home",
      description: "Deducts expenses for business use of your home",
      category: "Home Office"
    },
    {
      name: "Schedule 1 - Additional Income and Adjustments to Income",
      description: "Reports additional income and adjustments to income",
      category: "Income"
    },
    {
      name: "Form 1040 - Individual Income Tax Return",
      description: "Main individual income tax return form",
      category: "Main Return"
    },
    {
      name: "Form 8582 - Passive Activity Loss Limitations",
      description: "Calculates passive activity loss limitations",
      category: "Loss Limitations"
    },
    {
      name: "Form 6251 - Alternative Minimum Tax",
      description: "Calculates alternative minimum tax",
      category: "AMT"
    },
    {
      name: "Schedule C - Profit or Loss From Business",
      description: "Reports business income and expenses",
      category: "Business"
    },
    {
      name: "Form 1098 - Mortgage Interest Statement",
      description: "Reports mortgage interest paid",
      category: "Interest"
    }
  ]

  return (
    <div className="p-6">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">Tax Forms</h1>
        <p className="text-gray-600">100% Depreciation Compliance for 2024</p>
      </div>

      {taxFormsData.properties && taxFormsData.properties.length > 0 ? (
        <div className="space-y-8">
          {/* Property Summary */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">Property Summary</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {taxFormsData.properties.map((property) => (
                <div key={property.id} className="border border-gray-200 rounded-lg p-4">
                  <h3 className="font-medium text-gray-900 mb-2">{property.address}</h3>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-gray-600">Purchase Price:</span>
                      <span className="font-medium">{formatCurrency(property.purchase_price)}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">Section 179:</span>
                      <span className="font-medium text-green-600">{formatCurrency(property.section_179_deduction)}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">Rental Income:</span>
                      <span className="font-medium">{formatCurrency(property.rental_income)}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">Net Income:</span>
                      <span className={`font-medium ${
                        property.net_rental_income >= 0 ? 'text-green-600' : 'text-red-600'
                      }`}>
                        {formatCurrency(property.net_rental_income)}
                      </span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Totals Summary */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">Tax Summary</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
              <div className="text-center p-4 bg-blue-50 rounded-lg">
                <p className="text-sm text-gray-600">Total Purchase Price</p>
                <p className="text-2xl font-bold text-blue-600">{formatCurrency(taxFormsData.totals.total_purchase_price)}</p>
              </div>
              <div className="text-center p-4 bg-green-50 rounded-lg">
                <p className="text-sm text-gray-600">Section 179 Deduction</p>
                <p className="text-2xl font-bold text-green-600">{formatCurrency(taxFormsData.totals.total_section_179)}</p>
              </div>
              <div className="text-center p-4 bg-purple-50 rounded-lg">
                <p className="text-sm text-gray-600">Rental Income</p>
                <p className="text-2xl font-bold text-purple-600">{formatCurrency(taxFormsData.totals.total_rental_income)}</p>
              </div>
              <div className="text-center p-4 bg-orange-50 rounded-lg">
                <p className="text-sm text-gray-600">Net Income</p>
                <p className="text-2xl font-bold text-orange-600">{formatCurrency(taxFormsData.totals.total_net_income)}</p>
              </div>
            </div>
          </div>

          {/* Forms Needed */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">Required Tax Forms</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {taxFormsData.forms_needed.map((form, index) => (
                <div key={index} className="flex items-center p-3 border border-gray-200 rounded-lg">
                  <div className="w-4 h-4 bg-green-500 rounded-full mr-3"></div>
                  <span className="text-sm font-medium">{form}</span>
                </div>
              ))}
            </div>
          </div>

          {/* Compliance Checklist */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">Compliance Checklist</h2>
            <div className="space-y-3">
              {taxFormsData.compliance_checklist.map((item, index) => (
                <div key={index} className="flex items-start">
                  <div className="w-5 h-5 bg-green-500 rounded-full mr-3 mt-0.5 flex-shrink-0"></div>
                  <span className="text-sm">{item}</span>
                </div>
              ))}
            </div>
          </div>

          {/* Download Section */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <h2 className="text-xl font-semibold text-gray-900 mb-4">Download Forms</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              <button 
                onClick={() => downloadForm("Form 4562")}
                className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left"
              >
                <h3 className="font-medium text-gray-900 mb-1">Form 4562</h3>
                <p className="text-sm text-gray-600">Depreciation and Amortization</p>
              </button>
              <button 
                onClick={() => downloadForm("Schedule E")}
                className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left"
              >
                <h3 className="font-medium text-gray-900 mb-1">Schedule E</h3>
                <p className="text-sm text-gray-600">Supplemental Income and Loss</p>
              </button>
              <button 
                onClick={() => downloadForm("Form 4797")}
                className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left"
              >
                <h3 className="font-medium text-gray-900 mb-1">Form 4797</h3>
                <p className="text-sm text-gray-600">Sales of Business Property</p>
              </button>
            </div>
          </div>
        </div>
      ) : (
        <div className="space-y-8">
          {/* Download Section for Empty State */}
          <div className="bg-white rounded-lg shadow-md p-6">
            <div className="text-center mb-6">
              <DocumentTextIcon className="h-16 w-16 text-gray-400 mx-auto mb-4" />
              <h3 className="text-xl font-semibold text-gray-900 mb-2">Tax Form Templates</h3>
              <p className="text-gray-600">
                Download tax form templates for your real estate business. These are template forms that you can use as a starting point.
              </p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {allTaxForms.map((form, index) => (
                <button 
                  key={index}
                  onClick={() => downloadForm(form.name)}
                  className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left group"
                >
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <h3 className="font-medium text-gray-900 mb-1">{form.name.split(' - ')[0]}</h3>
                      <p className="text-sm text-gray-600 mb-2">{form.description}</p>
                      <span className="inline-block px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">
                        {form.category}
                      </span>
                    </div>
                    <ArrowDownTrayIcon className="h-5 w-5 text-gray-400 group-hover:text-blue-600 transition-colors" />
                  </div>
                </button>
              ))}
            </div>
          </div>

          {/* Information Section */}
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
            <h3 className="text-lg font-semibold text-blue-900 mb-4">Important Information</h3>
            <div className="space-y-3 text-sm text-blue-800">
              <div className="flex items-start">
                <div className="w-2 h-2 bg-blue-600 rounded-full mr-3 mt-2 flex-shrink-0"></div>
                <p>These are template forms for reference only. Always consult with a tax professional for accurate completion.</p>
              </div>
              <div className="flex items-start">
                <div className="w-2 h-2 bg-blue-600 rounded-full mr-3 mt-2 flex-shrink-0"></div>
                <p>Add properties to your portfolio to generate personalized tax calculations and form data.</p>
              </div>
              <div className="flex items-start">
                <div className="w-2 h-2 bg-blue-600 rounded-full mr-3 mt-2 flex-shrink-0"></div>
                <p>Section 179 and bonus depreciation calculations will be available when properties are added.</p>
              </div>
            </div>
          </div>

          {/* Call to Action */}
          <div className="text-center">
            <button className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors flex items-center mx-auto">
              <PlusIcon className="h-5 w-5 mr-2" />
              Add Your First Property
            </button>
            <p className="text-sm text-gray-500 mt-2">
              Add properties to generate personalized tax calculations and form data
            </p>
          </div>
        </div>
      )}
    </div>
  )
}

export default TaxForms 